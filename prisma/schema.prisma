// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum HttpMethod {
  GET
  POST
  PUT
  DELETE
  PATCH
  HEAD
}

enum MonitorStatus {
  UP
  DOWN
  UNKNOWN
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  monitors  Monitor[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Monitor {
  id             String          @id @default(cuid())
  name           String
  url            String
  method         HttpMethod      @default(GET)
  expectedStatus Int?
  interval       Int
  nextCheckAt    DateTime
  status         MonitorStatus   @default(UNKNOWN)
  lastCheckedAt  DateTime?
  user           User            @relation(fields: [userId], references: [id])
  userId         String
  results        MonitorResult[]
  alertConfig    AlertConfig?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model MonitorResult {
  id         String        @id @default(cuid())
  monitor    Monitor       @relation(fields: [monitorId], references: [id])
  monitorId  String
  status     MonitorStatus
  httpStatus Int?
  responseMs Int?
  checkedAt  DateTime      @default(now())
  error      String?
}

model AlertConfig {
  id         String   @id @default(cuid())
  monitor    Monitor  @relation(fields: [monitorId], references: [id])
  monitorId  String   @unique
  email      String?
  webhookUrl String?
  createdAt  DateTime @default(now())
}